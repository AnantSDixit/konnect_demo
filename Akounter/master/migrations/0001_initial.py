# Generated by Django 3.1.5 on 2022-02-01 16:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoothMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=250, null=True)),
                ('DisplayName', models.CharField(blank=True, max_length=250, null=True)),
                ('Address', models.TextField(blank=True, null=True)),
                ('pincode', models.CharField(blank=True, max_length=250, null=True)),
                ('location_link', models.CharField(blank=True, max_length=250, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='Update Time')),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
            ],
            options={
                'permissions': [('view_own_boothmaster', 'Can view own booth master')],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50)),
                ('country_abbr', models.CharField(blank=True, max_length=10)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_country', 'Can view own country')],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profession_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profession_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_profession', 'Can view own profession')],
            },
        ),
        migrations.CreateModel(
            name='WhatsappSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=50)),
                ('auth_key', models.CharField(max_length=200)),
                ('product_id', models.CharField(blank=True, max_length=200, null=True)),
                ('from_phonenumber', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, choices=[('wassenger', 'WASSENGER'), ('maytapi', 'MAYTAPI'), ('wapp', 'WAPP')], default='wassenger', max_length=200, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whatsappsetting_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whatsappsetting_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_whatsappsettings', 'Can view own Whatsapp Settings')],
            },
        ),
        migrations.CreateModel(
            name='VersionControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.BooleanField(default=True)),
                ('profession', models.BooleanField(default=True)),
                ('region', models.BooleanField(default=True)),
                ('country', models.BooleanField(default=True)),
                ('dropdown_tag', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(auto_now_add=True, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='version_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='version_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDefaultPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userdefaultpermission_created_by', to=settings.AUTH_USER_MODEL)),
                ('default_permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userdefaultpermission_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_userdefaultpermission', 'Can view own user default permission')],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=50)),
                ('state_abbr', models.CharField(blank=True, max_length=10)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_created_by', to=settings.AUTH_USER_MODEL)),
                ('state_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.country')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_state', 'Can view own state')],
            },
        ),
        migrations.CreateModel(
            name='SMSSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.CharField(max_length=50)),
                ('auth_key', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smssetting_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smssetting_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_smssettings', 'Can view own Sms Settings')],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, max_length=250, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_created_by', to=settings.AUTH_USER_MODEL)),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.profession')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('redirect_link', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(auto_now_add=True, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(auto_now_add=True, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type_name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employmenttype_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employmenttype_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_host', models.CharField(max_length=50)),
                ('email_host_user', models.CharField(max_length=200)),
                ('email_host_password', models.CharField(max_length=50)),
                ('email_port', models.IntegerField()),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emailsetting_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emailsetting_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_emailsettings', 'Can view own Email Settings')],
            },
        ),
        migrations.CreateModel(
            name='ElectionMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('Booth_activeflag', models.BooleanField(default=False)),
                ('Booth_displayflag', models.BooleanField(default=False)),
                ('Voting_screen_displayflag', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electionmaster_created_by', to=settings.AUTH_USER_MODEL)),
                ('profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.profession')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.region')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electionmaster_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_electionmaster', 'Can view own election master')],
            },
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custompermission_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custompermission_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('add_bulkuploadconnection_custompermission', 'Can Bulk Upload Connections'), ('add_tableexport_custompermission', 'Can Export Table'), ('add_matchconnectswithcentral_custompermission', 'Can Match Connects With CentralData'), ('add_shareconnects_custompermission', 'Can Share Connects With Others'), ('add_voterandboothinfo_custompermission', 'Can Vew voter & Booth Info'), ('add_votertrack_custompermission', 'Can Track Voter'), ('add_advancereports_custompermission', 'Can View Advance Reports & Analytics'), ('add_report_custompermission', 'Can View Reports'), ('add_sharedbulkconnection_custompermission', 'Can Shared Bulk Upload Connections')],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50)),
                ('city_abbr', models.CharField(blank=True, max_length=10)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('city_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.state')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_city', 'Can view own city')],
            },
        ),
        migrations.CreateModel(
            name='CentralizedData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrn_no', models.CharField(blank=True, max_length=15)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('nick_name', models.TextField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile-pic-centralized')),
                ('mobile', models.CharField(max_length=100)),
                ('email', models.CharField(blank=True, max_length=200)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('alt_mobile_1', models.TextField(blank=True)),
                ('alt_mobile_2', models.TextField(blank=True)),
                ('alt_email_1', models.TextField(blank=True)),
                ('alt_email_2', models.TextField(blank=True)),
                ('home_address', models.TextField(blank=True)),
                ('company_address', models.TextField(blank=True)),
                ('company_phone', models.CharField(blank=True, max_length=15)),
                ('company_pincode', models.CharField(blank=True, max_length=25, null=True)),
                ('home_pincode', models.CharField(blank=True, max_length=25, null=True)),
                ('status', models.IntegerField(default=1)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=8, null=True, verbose_name='Gender')),
                ('about', models.TextField(blank=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('cop', models.CharField(blank=True, max_length=50)),
                ('voter', models.CharField(blank=True, max_length=50)),
                ('voted', models.BooleanField(blank=True, default=False, null=True)),
                ('vote_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Vote Datetime')),
                ('associate_flag', models.CharField(blank=True, max_length=100, null=True)),
                ('associate_year', models.IntegerField(blank=True, null=True)),
                ('fellowship_year', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('booth_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.boothmaster')),
                ('company_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='centralizeddata_company_city', to='master.city')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centralizeddata_created_by', to=settings.AUTH_USER_MODEL)),
                ('home_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='centralizeddata_home_city', to='master.city')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='centralizeddata_country', to='master.country')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.profession')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.region')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centralizeddata_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_centralizeddata', 'Can view own Centralized Data')],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.CharField(max_length=100)),
                ('campaign_name', models.CharField(max_length=100)),
                ('campaign_detail', models.TextField(blank=True)),
                ('campaign_logo', models.ImageField(blank=True, upload_to='campaign-logo')),
                ('campaign_tagline', models.TextField(blank=True)),
                ('office_address', models.TextField(blank=True)),
                ('office_contact_1', models.CharField(blank=True, max_length=15)),
                ('office_contact_2', models.CharField(blank=True, max_length=15)),
                ('office_email', models.CharField(blank=True, max_length=200)),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('campaign_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_campaign', 'Can view own campaign')],
            },
        ),
        migrations.AddField(
            model_name='boothmaster',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.city'),
        ),
        migrations.AddField(
            model_name='boothmaster',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boothmaster_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boothmaster',
            name='election',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.electionmaster'),
        ),
        migrations.AddField(
            model_name='boothmaster',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boothmaster_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BoothAssociateMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Updated on')),
                ('booth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.boothmaster')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boothassociatemap_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boothassociatemap_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_own_boothassociatemap', 'Can view own booth associate map')],
            },
        ),
        migrations.CreateModel(
            name='AppVesrionTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('usual_update', models.BooleanField(default=False)),
                ('force_update', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created on')),
                ('updated_date', models.DateTimeField(auto_now_add=True, verbose_name='Updated on')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appvesriontrack_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appvesriontrack_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
